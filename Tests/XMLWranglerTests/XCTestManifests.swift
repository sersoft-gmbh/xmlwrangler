#if !canImport(ObjectiveC)
import XCTest

extension ErrorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ErrorsTests = [
        ("testLookupErrorDescription", testLookupErrorDescription),
        ("testParserMissingRootElementError", testParserMissingRootElementError),
        ("testParserUnknownError", testParserUnknownError),
    ]
}

extension GitHubIssueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GitHubIssueTests = [
        ("testIssue11", testIssue11),
    ]
}

extension ParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserTests = [
        ("testMixedContentParsing", testMixedContentParsing),
        ("testParsingAndConverting", testParsingAndConverting),
        ("testParsingError", testParsingError),
        ("testRepetitiveParsing", testRepetitiveParsing),
        ("testSuccessfulParsing", testSuccessfulParsing),
    ]
}

extension SerializationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SerializationTests = [
        ("testConvertibleSerialization", testConvertibleSerialization),
        ("testDocumentEncodingDescription", testDocumentEncodingDescription),
        ("testEscapableContentDescription", testEscapableContentDescription),
        ("testEscapableContentQuotesDescription", testEscapableContentQuotesDescription),
        ("testEscapingStrings", testEscapingStrings),
        ("testMixedContentSerialization", testMixedContentSerialization),
        ("testXMLDocumentSerialization", testXMLDocumentSerialization),
        ("testXMLSerialization", testXMLSerialization),
    ]
}

extension XMLElementContentElementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElementContentElementTests = [
        ("testAppendingContentOfSequence", testAppendingContentOfSequence),
        ("testAppendingElements", testAppendingElements),
        ("testAppendingObject", testAppendingObject),
        ("testAppendingString", testAppendingString),
        ("testCompression", testCompression),
        ("testExpressibleByStringLiteral", testExpressibleByStringLiteral),
        ("testInternalHelpers", testInternalHelpers),
    ]
}

extension XMLElementContent_LookupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElementContent_LookupTests = [
        ("testFindingFirstObjectRecursive", testFindingFirstObjectRecursive),
        ("testFindingFirstObjectShallow", testFindingFirstObjectShallow),
        ("testFindingLastObjectRecursive", testFindingLastObjectRecursive),
        ("testFindingLastObjectShallow", testFindingLastObjectShallow),
        ("testFindingObjectsRecursive", testFindingObjectsRecursive),
        ("testFindingObjectsShallow", testFindingObjectsShallow),
    ]
}

extension XMLElementProtocolsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElementProtocolsTests = [
        ("testConvenienceImplementations", testConvenienceImplementations),
    ]
}

extension XMLElementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElementTests = [
        ("testDebugDescription", testDebugDescription),
        ("testDescription", testDescription),
        ("testIdentifier", testIdentifier),
        ("testInitialization", testInitialization),
    ]
}

extension XMLElement_AttributesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElement_AttributesTests = [
        ("testAttributeContentsCollectionConformance", testAttributeContentsCollectionConformance),
        ("testAttributeContentsDescriptions", testAttributeContentsDescriptions),
        ("testAttributeContentsMutableCollectionConformance", testAttributeContentsMutableCollectionConformance),
        ("testAttributeContentsSequenceConformance", testAttributeContentsSequenceConformance),
        ("testAttributeKeysCollectionConformance", testAttributeKeysCollectionConformance),
        ("testAttributeKeysDescriptions", testAttributeKeysDescriptions),
        ("testAttributeKeysSequenceConformance", testAttributeKeysSequenceConformance),
        ("testAttributeMerging", testAttributeMerging),
        ("testAttributeRemoveContent", testAttributeRemoveContent),
        ("testAttributesContent", testAttributesContent),
        ("testAttributesFiltering", testAttributesFiltering),
        ("testAttributesInitialization", testAttributesInitialization),
        ("testAttributesKey", testAttributesKey),
        ("testAttributesSubscripts", testAttributesSubscripts),
        ("testAttributesUpdateContent", testAttributesUpdateContent),
        ("testCollectionConformance", testCollectionConformance),
        ("testContentsAccessor", testContentsAccessor),
        ("testDescriptions", testDescriptions),
        ("testDictionaryInitializer", testDictionaryInitializer),
        ("testKeysAccessor", testKeysAccessor),
        ("testRemoveAll", testRemoveAll),
        ("testSequenceConformance", testSequenceConformance),
        ("testXMLAttributeContentConvrtibleDefaultImplementation", testXMLAttributeContentConvrtibleDefaultImplementation),
    ]
}

extension XMLElement_LookupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElement_LookupTests = [
        ("testConverting", testConverting),
        ("testExistingAttributeConversion", testExistingAttributeConversion),
        ("testExistingAttributeLookup", testExistingAttributeLookup),
        ("testExistingElementLookupAtPath", testExistingElementLookupAtPath),
        ("testExistingElementLookupAtVariadicPath", testExistingElementLookupAtVariadicPath),
        ("testExistingElementsLookup", testExistingElementsLookup),
        ("testExistingStringContentConversion", testExistingStringContentConversion),
        ("testExistingStringContentLookup", testExistingStringContentLookup),
        ("testFailedExistingAttributeConversion", testFailedExistingAttributeConversion),
        ("testFailedExistingStringContentConversion", testFailedExistingStringContentConversion),
        ("testFailedRawRepresentableAttributeConversion", testFailedRawRepresentableAttributeConversion),
        ("testFailedRawRepresentableExistingStringContentConversion", testFailedRawRepresentableExistingStringContentConversion),
        ("testLosslessStringConvertibleAttributeConversion", testLosslessStringConvertibleAttributeConversion),
        ("testLosslessStringConvertibleStringContentConversion", testLosslessStringConvertibleStringContentConversion),
        ("testNonExistingAttributeConversion", testNonExistingAttributeConversion),
        ("testNonExistingAttributeLookup", testNonExistingAttributeLookup),
        ("testNonExistingElementLookupAtPath", testNonExistingElementLookupAtPath),
        ("testNonExistingElementLookupAtVariadicPath", testNonExistingElementLookupAtVariadicPath),
        ("testNonExistingElementsLookup", testNonExistingElementsLookup),
        ("testNonExistingStringContentConversion", testNonExistingStringContentConversion),
        ("testNonExistingStringContentLookup", testNonExistingStringContentLookup),
        ("testRawRepresentableAttributeConversion", testRawRepresentableAttributeConversion),
        ("testRawRepresentableLosslessStringConvertibleAttributeConversion", testRawRepresentableLosslessStringConvertibleAttributeConversion),
        ("testRawRepresentableLosslessStringConvertibleStringContentConversion", testRawRepresentableLosslessStringConvertibleStringContentConversion),
        ("testRawRepresentableStringContentConversion", testRawRepresentableStringContentConversion),
    ]
}

extension XMLElement_MutationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLElement_MutationTests = [
        ("testAppendingContentOfSequence", testAppendingContentOfSequence),
        ("testAppendingElement", testAppendingElement),
        ("testAppendingElements", testAppendingElements),
        ("testAppendingString", testAppendingString),
        ("testMutatingAccessToElementAtInvalidPathThrows", testMutatingAccessToElementAtInvalidPathThrows),
        ("testMutatingAccessToElementAtPath", testMutatingAccessToElementAtPath),
        ("testMutatingAccessToElementAtVariadicPath", testMutatingAccessToElementAtVariadicPath),
        ("testRemovingElementAtEmptyPath", testRemovingElementAtEmptyPath),
        ("testRemovingElementAtPath", testRemovingElementAtPath),
        ("testRemovingElementAtVariadicPath", testRemovingElementAtVariadicPath),
        ("testRemovingInexistentElementAtPath", testRemovingInexistentElementAtPath),
        ("testReplacingElementAtPath", testReplacingElementAtPath),
        ("testReplacingElementAtVariadicPath", testReplacingElementAtVariadicPath),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ErrorsTests.__allTests__ErrorsTests),
        testCase(GitHubIssueTests.__allTests__GitHubIssueTests),
        testCase(ParserTests.__allTests__ParserTests),
        testCase(SerializationTests.__allTests__SerializationTests),
        testCase(XMLElementContentElementTests.__allTests__XMLElementContentElementTests),
        testCase(XMLElementContent_LookupTests.__allTests__XMLElementContent_LookupTests),
        testCase(XMLElementProtocolsTests.__allTests__XMLElementProtocolsTests),
        testCase(XMLElementTests.__allTests__XMLElementTests),
        testCase(XMLElement_AttributesTests.__allTests__XMLElement_AttributesTests),
        testCase(XMLElement_LookupTests.__allTests__XMLElement_LookupTests),
        testCase(XMLElement_MutationTests.__allTests__XMLElement_MutationTests),
    ]
}
#endif
