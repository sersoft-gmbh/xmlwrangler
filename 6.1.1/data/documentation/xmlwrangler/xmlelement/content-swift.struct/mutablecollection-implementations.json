{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/MutableCollection-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "XMLWrangler"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "MutableCollection Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-22mry",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-6omqc",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/reverse()",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/shuffle()",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/shuffle(using:)",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/sort(by:)",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/swapAt(_:_:)",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/withContiguousMutableStorageIfAvailable(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/mutablecollection-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://XMLWrangler/documentation/XMLWrangler": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "XMLWrangler",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement": {
  "abstract" : [
    {
      "text" : "Represents an element in an XML structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct": {
  "abstract" : [
    {
      "text" : "A collection implementation that represents the contents of an XML element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement.Content",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/partition(by:)-22mry": {
  "abstract" : [
    {
      "text" : "Reorders the elements of the collection such that all the elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that match the given predicate are after all the elements that don’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "partition"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-22mry",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "partition(by:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-22mry"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/partition(by:)-6omqc": {
  "abstract" : [
    {
      "text" : "Reorders the elements of the collection such that all the elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that match the given predicate are after all the elements that don’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "match.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "BidirectionalCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "partition"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-6omqc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "partition(by:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-6omqc"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/reverse()": {
  "abstract" : [
    {
      "text" : "Reverses the elements of the collection in place.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "BidirectionalCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reverse"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/reverse()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reverse()",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reverse()"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/shuffle()": {
  "abstract" : [
    {
      "text" : "Shuffles the collection in place.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "RandomAccessCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffle"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/shuffle()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffle()",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffle()"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/shuffle(using:)": {
  "abstract" : [
    {
      "text" : "Shuffles the collection in place, using the given generator as a source",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for randomness.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "RandomAccessCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffle"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/shuffle(using:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffle(using:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffle(using:)"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/sort(by:)": {
  "abstract" : [
    {
      "text" : "Sorts the collection in place, using the given predicate as the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "comparison between elements.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "RandomAccessCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sort"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/sort(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sort(by:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/sort(by:)"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/swapAt(_:_:)": {
  "abstract" : [
    {
      "text" : "Exchanges the values at the specified indices of the collection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "swapAt"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/swapAt(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "swapAt(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/swapat(_:_:)"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/withContiguousMutableStorageIfAvailable(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withContiguousMutableStorageIfAvailable"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sr",
      "text" : "UnsafeMutableBufferPointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/withContiguousMutableStorageIfAvailable(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withContiguousMutableStorageIfAvailable(_:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/withcontiguousmutablestorageifavailable(_:)"
}
}
}