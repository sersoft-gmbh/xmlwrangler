{
  "abstract" : [
    {
      "text" : "Inserts the elements of a sequence into the collection at the specified",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "position.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/RangeReplaceableCollection-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/insert(contentsOf:at:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Swift",
    "externalID" : "s:SmsE6insert10contentsOf2atyqd__n_5IndexQztSlRd__7ElementQyd__AFRtzlF::SYNTHESIZED::s:11XMLWrangler10XMLElementV7ContentV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "insert"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "C"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "contentsOf"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "C"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "at"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Index"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "XMLWrangler"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "insert(contentsOf:at:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "mutating"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "insert"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "C"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "contentsOf"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "newElements"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "C"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "at"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "i"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Index"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "C"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl",
              "text" : "Collection"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "C"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The new elements to insert into the collection.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "newElements"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The position at which to insert the new elements. ",
                  "type" : "text"
                },
                {
                  "code" : "index",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "must be a valid index of the collection.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "i"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The new elements are inserted before the element currently at the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "specified index. If you pass the collection’s ",
              "type" : "text"
            },
            {
              "code" : "endIndex",
              "type" : "codeVoice"
            },
            {
              "text" : " property as the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "index",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter, the new elements are appended to the collection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Here’s an example of inserting a range of integers into an array of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "same type:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var numbers = [1, 2, 3, 4, 5]",
            "numbers.insert(contentsOf: 100...103, at: 3)",
            "print(numbers)",
            "\/\/ Prints \"[1, 2, 3, 100, 101, 102, 103, 4, 5]\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Calling this method may invalidate any existing indices for use with this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "collection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "O(",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " + ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "m",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : "), where ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " is length of this collection and",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "m",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " is the length of ",
                  "type" : "text"
                },
                {
                  "code" : "newElements",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". If ",
                  "type" : "text"
                },
                {
                  "code" : "i == endIndex",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", this method",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "is equivalent to ",
                  "type" : "text"
                },
                {
                  "code" : "append(contentsOf:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/insert(contentsof:at:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://XMLWrangler/documentation/XMLWrangler": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "XMLWrangler",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement": {
  "abstract" : [
    {
      "text" : "Represents an element in an XML structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct": {
  "abstract" : [
    {
      "text" : "A collection implementation that represents the contents of an XML element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement.Content",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/RangeReplaceableCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/RangeReplaceableCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RangeReplaceableCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/rangereplaceablecollection-implementations"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/insert(contentsOf:at:)": {
  "abstract" : [
    {
      "text" : "Inserts the elements of a sequence into the collection at the specified",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "position.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "insert"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "contentsOf"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/insert(contentsOf:at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "insert(contentsOf:at:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/insert(contentsof:at:)"
}
}
}