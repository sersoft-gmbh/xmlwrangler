{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/parser\/missingrootelementerror",
                "title" : "Parser.MissingRootElementError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/parser\/unknownerror",
                "title" : "Parser.UnknownError",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/parser\/init(data:)",
                "title" : "init(data: Data)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/parser\/init(string:)",
                "title" : "convenience init(string: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/parser\/parse()",
                "title" : "func parse() throws -> XMLElement",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/parser\/parseandconvert(to:)",
                "title" : "func parseAndConvert<Target>(to: Target.Type) throws -> Target",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/parser",
            "title" : "Parser",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlattributecontent\/init(xmlattributecontent:)-57hl",
                        "title" : "init?(xmlAttributeContent: XMLElement.Attributes.Content)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlattributecontent\/init(xmlattributecontent:)-3j6bp",
                        "title" : "init?(xmlAttributeContent: XMLElement.Attributes.Content)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlattributecontent\/init(xmlattributecontent:)-94r05",
                        "title" : "init?(xmlAttributeContent: XMLElement.Attributes.Content)",
                        "type" : "init"
                      }
                    ],
                    "title" : "ExpressibleByXMLAttributeContent Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlattributecontent\/init(xmlattributecontent:)-3jl0z",
                "title" : "init?(xmlAttributeContent: XMLElement.Attributes.Content)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlattributecontent",
            "title" : "ExpressibleByXMLAttributeContent",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlelement\/init(xml:)-9t88v",
                        "title" : "init(xml: XMLElement) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlelement\/init(xml:)-3wu3r",
                        "title" : "init(xml: XMLElement) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlelement\/init(xml:)-76pd1",
                        "title" : "init(xml: XMLElement) throws",
                        "type" : "init"
                      }
                    ],
                    "title" : "ExpressibleByXMLElement Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlelement\/init(xml:)-9lxb6",
                "title" : "init(xml: XMLElement) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/expressiblebyxmlelement",
            "title" : "ExpressibleByXMLElement",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlattributecontentconvertible\/xmlattributecontent-40rww",
                        "title" : "var xmlAttributeContent: XMLElement.Attributes.Content",
                        "type" : "property"
                      }
                    ],
                    "title" : "XMLAttributeContentConvertible Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlattributecontentconvertible\/xmlattributecontent-7x6h7",
                "title" : "var xmlAttributeContent: XMLElement.Attributes.Content",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/xmlattributecontentconvertible",
            "title" : "XMLAttributeContentConvertible",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelementconvertible\/xml",
                "title" : "var xml: XMLElement",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/xmlelementconvertible",
            "title" : "XMLElementConvertible",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/init(rawvalue:)",
                "title" : "init(rawValue: SerializationOptions.RawValue)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/rawvalue-swift.property",
                "title" : "let rawValue: SerializationOptions.RawValue",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/rawvalue-swift.typealias",
                "title" : "SerializationOptions.RawValue",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/pretty",
                "title" : "static let pretty: SerializationOptions",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/singlequoteattributes",
                "title" : "static let singleQuoteAttributes: SerializationOptions",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/contains(_:)",
                    "title" : "func contains(Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/formintersection(_:)",
                    "title" : "func formIntersection(Self)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/formsymmetricdifference(_:)",
                    "title" : "func formSymmetricDifference(Self)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/formunion(_:)",
                    "title" : "func formUnion(Self)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/insert(_:)",
                    "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/intersection(_:)",
                    "title" : "func intersection(Self) -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/remove(_:)",
                    "title" : "func remove(Self.Element) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/symmetricdifference(_:)",
                    "title" : "func symmetricDifference(Self) -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/union(_:)",
                    "title" : "func union(Self) -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/update(with:)",
                    "title" : "func update(with: Self.Element) -> Self.Element?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/optionset-implementations",
                "title" : "OptionSet Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/init(_:)",
                    "title" : "init<S>(S)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/init(arrayliteral:)",
                    "title" : "init(arrayLiteral: Self.Element...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/isdisjoint(with:)",
                    "title" : "func isDisjoint(with: Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/isstrictsubset(of:)",
                    "title" : "func isStrictSubset(of: Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/isstrictsuperset(of:)",
                    "title" : "func isStrictSuperset(of: Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/issubset(of:)",
                    "title" : "func isSubset(of: Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/issuperset(of:)",
                    "title" : "func isSuperset(of: Self) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/subtract(_:)",
                    "title" : "func subtract(Self)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/serializationoptions\/subtracting(_:)",
                    "title" : "func subtracting(Self) -> Self",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/serializationoptions\/setalgebra-implementations",
                "title" : "SetAlgebra Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/serializationoptions",
            "title" : "SerializationOptions",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(_:)",
                        "title" : "init(XMLElement.Attributes.Content.RawValue)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(rawvalue:)",
                        "title" : "init(rawValue: XMLElement.Attributes.Content.RawValue)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(stringliteral:)",
                        "title" : "init(stringLiteral: XMLElement.Attributes.Content.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(xmlattributecontent:)",
                        "title" : "init(xmlAttributeContent: XMLElement.Attributes.Content)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/rawvalue-swift.property",
                        "title" : "let rawValue: XMLElement.Attributes.Content.RawValue",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/xmlattributecontent",
                        "title" : "var xmlAttributeContent: XMLElement.Attributes.Content",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/rawvalue-swift.typealias",
                        "title" : "XMLElement.Attributes.Content.RawValue",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/stringliteraltype",
                        "title" : "XMLElement.Attributes.Content.StringLiteralType",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/halfwidthcornerquoted",
                            "title" : "var halfWidthCornerQuoted: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/customstringconvertible-implementations",
                        "title" : "CustomStringConvertible Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(extendedgraphemeclusterliteral:)",
                            "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/expressiblebyextendedgraphemeclusterliteral-implementations",
                        "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(stringinterpolation:)",
                            "title" : "init(stringInterpolation: DefaultStringInterpolation)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/expressiblebystringinterpolation-implementations",
                        "title" : "ExpressibleByStringInterpolation Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/init(unicodescalarliteral:)",
                            "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/expressiblebyunicodescalarliteral-implementations",
                        "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/content",
                    "title" : "XMLElement.Attributes.Content",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/iterator\/next()",
                            "title" : "func next() -> XMLElement.Attributes.Contents.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/iterator",
                        "title" : "XMLElement.Attributes.Contents.Iterator",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/endindex",
                        "title" : "var endIndex: XMLElement.Attributes.Contents.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/startindex",
                        "title" : "var startIndex: XMLElement.Attributes.Contents.Index",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index(after:)",
                        "title" : "func index(after: XMLElement.Attributes.Contents.Index) -> XMLElement.Attributes.Contents.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/makeiterator()",
                        "title" : "func makeIterator() -> XMLElement.Attributes.Contents.Iterator",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-1w5qy",
                        "title" : "subscript(XMLElement.Attributes.Contents.Index) -> XMLElement.Attributes.Contents.Element",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/element",
                        "title" : "XMLElement.Attributes.Contents.Element",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index",
                        "title" : "XMLElement.Attributes.Contents.Index",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/underestimatedcount-9wo6n",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/convertbyoffset(_:in:)-2vce2",
                            "title" : "func convertByOffset<C>(Self.Index, in: C) -> C.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/convertbyoffset(_:in:)-70m7r",
                            "title" : "func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index(atoffset:)",
                            "title" : "func index(atOffset: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/map(_:)-7145q",
                            "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/offset(of:)",
                            "title" : "func offset(of: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/offset(ofindex:)",
                            "title" : "func offset(ofIndex: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/offsets(of:)",
                            "title" : "func offsets(of: Range<Self.Index>) -> Range<Int>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/split(around:)",
                            "title" : "func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/trydropprefix(_:)",
                            "title" : "func tryDropPrefix<C>(C) -> Self.SubSequence?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/trydropsuffix(_:)",
                            "title" : "func tryDropSuffix<C>(C) -> Self.SubSequence?",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-56klo",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-58fyu",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-5ckk9",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/halfwidthcornerquoted",
                            "title" : "var halfWidthCornerQuoted: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/customstringconvertible-implementations",
                        "title" : "CustomStringConvertible Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/partition(by:)",
                            "title" : "func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/swapat(_:_:)",
                            "title" : "func swapAt(Self.Index, Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/withcontiguousmutablestorageifavailable(_:)",
                            "title" : "func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-2es0p",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-6z9kz",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-8i8m8",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-91lu6",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/subscript(_:)-wd2l",
                            "title" : "subscript(Range<Self.Index>) -> Self.SubSequence",
                            "type" : "subscript"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/mutablecollection-implementations",
                        "title" : "MutableCollection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/underestimatedcount-8ku3c",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/all(_:)",
                            "title" : "func all((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/any(_:)",
                            "title" : "func any((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/flatmap(_:)-2an33",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/flatmap(_:)-3xzxn",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/map(_:)-6ev6n",
                            "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/none(_:)",
                            "title" : "func none((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.struct",
                    "title" : "XMLElement.Attributes.Contents",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(_:)",
                        "title" : "init(XMLElement.Attributes.Key.RawValue)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(rawvalue:)",
                        "title" : "init(rawValue: XMLElement.Attributes.Key.RawValue)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(stringliteral:)",
                        "title" : "init(stringLiteral: XMLElement.Attributes.Key.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/rawvalue-swift.property",
                        "title" : "let rawValue: XMLElement.Attributes.Key.RawValue",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/rawvalue-swift.typealias",
                        "title" : "XMLElement.Attributes.Key.RawValue",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/stringliteraltype",
                        "title" : "XMLElement.Attributes.Key.StringLiteralType",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/halfwidthcornerquoted",
                            "title" : "var halfWidthCornerQuoted: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/customstringconvertible-implementations",
                        "title" : "CustomStringConvertible Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(extendedgraphemeclusterliteral:)",
                            "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/expressiblebyextendedgraphemeclusterliteral-implementations",
                        "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(unicodescalarliteral:)",
                            "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/expressiblebyunicodescalarliteral-implementations",
                        "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/init(from:)",
                            "title" : "init(from: Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/encode(to:)",
                            "title" : "func encode(to: Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/key",
                    "title" : "XMLElement.Attributes.Key",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/iterator\/next()",
                            "title" : "func next() -> XMLElement.Attributes.Keys.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/iterator",
                        "title" : "XMLElement.Attributes.Keys.Iterator",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/endindex",
                        "title" : "var endIndex: XMLElement.Attributes.Keys.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/startindex",
                        "title" : "var startIndex: XMLElement.Attributes.Keys.Index",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index(after:)",
                        "title" : "func index(after: XMLElement.Attributes.Keys.Index) -> XMLElement.Attributes.Keys.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/makeiterator()",
                        "title" : "func makeIterator() -> XMLElement.Attributes.Keys.Iterator",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/subscript(_:)-4xoco",
                        "title" : "subscript(XMLElement.Attributes.Keys.Index) -> XMLElement.Attributes.Keys.Element",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/element",
                        "title" : "XMLElement.Attributes.Keys.Element",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index",
                        "title" : "XMLElement.Attributes.Keys.Index",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/underestimatedcount-6z6if",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/convertbyoffset(_:in:)-14d74",
                            "title" : "func convertByOffset<C>(Self.Index, in: C) -> C.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/convertbyoffset(_:in:)-7svhz",
                            "title" : "func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index(atoffset:)",
                            "title" : "func index(atOffset: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/map(_:)-53j2n",
                            "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/offset(of:)",
                            "title" : "func offset(of: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/offset(ofindex:)",
                            "title" : "func offset(ofIndex: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/offsets(of:)",
                            "title" : "func offsets(of: Range<Self.Index>) -> Range<Int>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/split(around:)",
                            "title" : "func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/trydropprefix(_:)",
                            "title" : "func tryDropPrefix<C>(C) -> Self.SubSequence?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/trydropsuffix(_:)",
                            "title" : "func tryDropSuffix<C>(C) -> Self.SubSequence?",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/subscript(_:)-6aivr",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/subscript(_:)-7txyu",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/subscript(_:)-8f0if",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/halfwidthcornerquoted",
                            "title" : "var halfWidthCornerQuoted: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/customstringconvertible-implementations",
                        "title" : "CustomStringConvertible Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/underestimatedcount-9gv2w",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/all(_:)",
                            "title" : "func all((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/any(_:)",
                            "title" : "func any((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/flatmap(_:)-124gs",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/flatmap(_:)-5tdij",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/map(_:)-45pcf",
                            "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/none(_:)",
                            "title" : "func none((Self.Element) -> Bool) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.struct",
                    "title" : "XMLElement.Attributes.Keys",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/init(_:uniquingkeyswith:)",
                    "title" : "init<S>(S, uniquingKeysWith: (XMLElement.Attributes.Content, XMLElement.Attributes.Content) throws -> XMLElement.Attributes.Content) rethrows",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/init(minimumcapacity:)",
                    "title" : "init(minimumCapacity: Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/init(uniquekeyswithcontents:)",
                    "title" : "init<S>(uniqueKeysWithContents: S)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contents-swift.property",
                    "title" : "var contents: XMLElement.Attributes.Contents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/keys-swift.property",
                    "title" : "var keys: XMLElement.Attributes.Keys",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/filter(_:)",
                    "title" : "func filter((XMLElement.Attributes.Element) throws -> Bool) rethrows -> XMLElement.Attributes",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/merge(_:uniquingkeyswith:)-134z7",
                    "title" : "func merge(XMLElement.Attributes, uniquingKeysWith: (XMLElement.Attributes.Content, XMLElement.Attributes.Content) throws -> XMLElement.Attributes.Content) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/merge(_:uniquingkeyswith:)-2dkp4",
                    "title" : "func merge<S>(S, uniquingKeysWith: (XMLElement.Attributes.Content, XMLElement.Attributes.Content) throws -> XMLElement.Attributes.Content) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/merging(_:uniquingkeyswith:)-37s76",
                    "title" : "func merging(XMLElement.Attributes, uniquingKeysWith: (XMLElement.Attributes.Content, XMLElement.Attributes.Content) throws -> XMLElement.Attributes.Content) rethrows -> XMLElement.Attributes",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/merging(_:uniquingkeyswith:)-7rko5",
                    "title" : "func merging<S>(S, uniquingKeysWith: (XMLElement.Attributes.Content, XMLElement.Attributes.Content) throws -> XMLElement.Attributes.Content) rethrows -> XMLElement.Attributes",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/removeall(keepingcapacity:)",
                    "title" : "func removeAll(keepingCapacity: Bool)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/removecontent(forkey:)",
                    "title" : "func removeContent(forKey: XMLElement.Attributes.Key) -> XMLElement.Attributes.Content?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/updatecontent(_:forkey:)",
                    "title" : "func updateContent(XMLElement.Attributes.Content, forKey: XMLElement.Attributes.Key) -> XMLElement.Attributes.Content?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:)-1v9n0",
                    "title" : "subscript(XMLElement.Attributes.Key) -> XMLElement.Attributes.Content?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:default:)",
                    "title" : "subscript<Default>(XMLElement.Attributes.Key, default _: () -> Default) -> XMLElement.Attributes.Content",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/_(_:_:)-5fbmx",
                            "title" : "static func < (XMLElement.Attributes.Index, XMLElement.Attributes.Index) -> Bool",
                            "type" : "op"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/'...(_:)-ipkd",
                                "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/'...(_:)-vdf4",
                                "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/'...(_:_:)",
                                "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/'.._(_:)",
                                "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/'.._(_:_:)",
                                "title" : "static func ..< (Self, Self) -> Range<Self>",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/_(_:_:)-6ycbk",
                                "title" : "static func > (Self, Self) -> Bool",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/_=(_:_:)-5oumv",
                                "title" : "static func >= (Self, Self) -> Bool",
                                "type" : "op"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/_=(_:_:)-9ekje",
                                "title" : "static func <= (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/comparable-implementations",
                            "title" : "Comparable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index",
                        "title" : "XMLElement.Attributes.Index",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/count-2xy68",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/count-4nfxa",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/endindex",
                        "title" : "var endIndex: XMLElement.Attributes.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/isempty-1dzuk",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/isempty-5h7m7",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/startindex",
                        "title" : "var startIndex: XMLElement.Attributes.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/underestimatedcount-49qwn",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/convertbyoffset(_:in:)-4hpjj",
                        "title" : "func convertByOffset<C>(Self.Index, in: C) -> C.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/convertbyoffset(_:in:)-5mnqx",
                        "title" : "func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index(after:)",
                        "title" : "func index(after: XMLElement.Attributes.Index) -> XMLElement.Attributes.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/index(atoffset:)",
                        "title" : "func index(atOffset: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/map(_:)-5apbc",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/offset(of:)",
                        "title" : "func offset(of: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/offset(ofindex:)",
                        "title" : "func offset(ofIndex: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/offsets(of:)",
                        "title" : "func offsets(of: Range<Self.Index>) -> Range<Int>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/split(around:)",
                        "title" : "func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:)-8ysl2",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:)-92e75",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:)-9hwxq",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/subscript(_:)-gq1a",
                        "title" : "subscript(XMLElement.Attributes.Index) -> XMLElement.Attributes.Element",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/customdebugstringconvertible-implementations",
                    "title" : "CustomDebugStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/init(dictionaryliteral:)",
                        "title" : "init(dictionaryLiteral: (XMLElement.Attributes.Key, XMLAttributeContentConvertible)...)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/expressiblebydictionaryliteral-implementations",
                    "title" : "ExpressibleByDictionaryLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/iterator\/next()",
                            "title" : "func next() -> XMLElement.Attributes.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/iterator",
                        "title" : "XMLElement.Attributes.Iterator",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/underestimatedcount-25r5f",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/underestimatedcount-qh5z",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/all(_:)",
                        "title" : "func all((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/any(_:)",
                        "title" : "func any((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/flatmap(_:)-4yo6e",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/flatmap(_:)-8fhwg",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/makeiterator()",
                        "title" : "func makeIterator() -> XMLElement.Attributes.Iterator",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/map(_:)-6v02m",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/none(_:)",
                        "title" : "func none((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/element",
                        "title" : "XMLElement.Attributes.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.struct",
                "title" : "XMLElement.Attributes",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/allelements",
                    "title" : "var allElements: Array<XMLElement>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/allstrings",
                    "title" : "var allStrings: Array<XMLElement.Content.Element.StringPart>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(contentsof:)-7tyzf",
                    "title" : "func append<S>(contentsOf: S)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(element:)",
                    "title" : "func append(element: XMLElement)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(elementof:)",
                    "title" : "func append<Convertible>(elementOf: Convertible)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(elements:)",
                    "title" : "func append(elements: XMLElement...)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(string:)",
                    "title" : "func append(string: XMLElement.Content.Element.StringPart)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/appendelement(_:)",
                    "title" : "func appendElement(XMLElement)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/appendelements(_:)",
                    "title" : "func appendElements(XMLElement...)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/appendstring(_:)",
                    "title" : "func appendString(XMLElement.Content.Element.StringPart)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/compress()",
                    "title" : "func compress()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/compressed()",
                    "title" : "func compressed() -> XMLElement.Content",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/find(elementsnamed:recursive:)",
                    "title" : "func find(elementsNamed: XMLElement.Name, recursive: Bool) -> [XMLElement]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/findfirst(elementnamed:recursive:)",
                    "title" : "func findFirst(elementNamed: XMLElement.Name, recursive: Bool) -> XMLElement?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/findlast(elementnamed:recursive:)",
                    "title" : "func findLast(elementNamed: XMLElement.Name, recursive: Bool) -> XMLElement?",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/element(_:)",
                        "title" : "case element(XMLElement)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/string(_:)",
                        "title" : "case string(XMLElement.Content.Element.StringPart)",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/init(stringliteral:)",
                        "title" : "init(stringLiteral: XMLElement.Content.Element.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/init(xml:)",
                        "title" : "init(xml: XMLElement)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/stringliteraltype",
                        "title" : "XMLElement.Content.Element.StringLiteralType",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/stringpart",
                        "title" : "XMLElement.Content.Element.StringPart",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/halfwidthcornerquoted",
                            "title" : "var halfWidthCornerQuoted: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/customstringconvertible-implementations",
                        "title" : "CustomStringConvertible Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/init(extendedgraphemeclusterliteral:)",
                            "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/expressiblebyextendedgraphemeclusterliteral-implementations",
                        "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/init(stringinterpolation:)",
                            "title" : "init(stringInterpolation: DefaultStringInterpolation)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/expressiblebystringinterpolation-implementations",
                        "title" : "ExpressibleByStringInterpolation Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/init(unicodescalarliteral:)",
                            "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                            "type" : "init"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element\/expressiblebyunicodescalarliteral-implementations",
                        "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/element",
                    "title" : "XMLElement.Content.Element",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/last",
                        "title" : "var last: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/difference(from:)",
                        "title" : "func difference<C>(from: C) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/difference(from:by:)",
                        "title" : "func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/flatmapoffsets(_:)",
                        "title" : "func flatmapOffsets(Offsets?) -> Range<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/formindex(before:)",
                        "title" : "func formIndex(before: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(before:)",
                        "title" : "func index(before: XMLElement.Content.Index) -> XMLElement.Content.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/last(where:)",
                        "title" : "func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/lastindex(of:)",
                        "title" : "func lastIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/lastindex(where:)",
                        "title" : "func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/mapoffsets(_:)",
                        "title" : "func mapOffsets(Offsets) -> Range<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reversed()",
                        "title" : "func reversed() -> ReversedCollection<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/bidirectionalcollection-implementations",
                    "title" : "BidirectionalCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/count-1znd4",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/count-3utvc",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/endindex",
                        "title" : "var endIndex: XMLElement.Content.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/indices-swift.property",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/isempty-2mz9z",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/isempty-7b44g",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/startindex",
                        "title" : "var startIndex: XMLElement.Content.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/underestimatedcount-7zy09",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/convertbyoffset(_:in:)-1ruxw",
                        "title" : "func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/convertbyoffset(_:in:)-6pnus",
                        "title" : "func convertByOffset<C>(Self.Index, in: C) -> C.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/distance(from:to:)",
                        "title" : "func distance(from: XMLElement.Content.Index, to: XMLElement.Content.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(_:offsetby:)",
                        "title" : "func index(XMLElement.Content.Index, offsetBy: Int) -> XMLElement.Content.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(after:)",
                        "title" : "func index(after: XMLElement.Content.Index) -> XMLElement.Content.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(atoffset:)",
                        "title" : "func index(atOffset: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/map(_:)-34vrq",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/offset(of:)",
                        "title" : "func offset(of: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/offset(ofindex:)",
                        "title" : "func offset(ofIndex: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/offsets(of:)",
                        "title" : "func offsets(of: Range<Self.Index>) -> Range<Int>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/split(around:)",
                        "title" : "func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trydropprefix(_:)",
                        "title" : "func tryDropPrefix<C>(C) -> Self.SubSequence?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trydropsuffix(_:)",
                        "title" : "func tryDropSuffix<C>(C) -> Self.SubSequence?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-1di0",
                        "title" : "subscript(XMLElement.Content.Index) -> XMLElement.Content.Element",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-2tuua",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-5rfhb",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-nd36",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index",
                        "title" : "XMLElement.Content.Index",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/indices-swift.typealias",
                        "title" : "XMLElement.Content.Indices",
                        "type" : "typealias"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subsequence",
                        "title" : "XMLElement.Content.SubSequence",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/customdebugstringconvertible-implementations",
                    "title" : "CustomDebugStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: XMLElement.Content.ArrayLiteralElement...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/arrayliteralelement",
                        "title" : "XMLElement.Content.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/init(literalcapacity:interpolationcount:)",
                            "title" : "init(literalCapacity: Int, interpolationCount: Int)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(_:)-46jy",
                            "title" : "func appendInterpolation<Convertible>(Convertible)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(_:)-4zdk6",
                            "title" : "func appendInterpolation(XMLElement.Content.Element...)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(_:)-7v6zj",
                            "title" : "func appendInterpolation(XMLElement.Content)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(_:)-7xhft",
                            "title" : "func appendInterpolation<S>(S)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(_:)-q0o5",
                            "title" : "func appendInterpolation<C>(C)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendinterpolation(contentof:)",
                            "title" : "func appendInterpolation(contentOf: XMLElement)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/appendliteral(_:)",
                            "title" : "func appendLiteral(XMLElement.Content.StringInterpolation.StringLiteralType)",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation\/stringliteraltype",
                            "title" : "XMLElement.Content.StringInterpolation.StringLiteralType",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringinterpolation",
                        "title" : "XMLElement.Content.StringInterpolation",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(stringinterpolation:)",
                        "title" : "init(stringInterpolation: XMLElement.Content.StringInterpolation)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebystringinterpolation-implementations",
                    "title" : "ExpressibleByStringInterpolation Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(stringliteral:)",
                        "title" : "init(stringLiteral: XMLElement.Content.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/stringliteraltype",
                        "title" : "XMLElement.Content.StringLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebyunicodescalarliteral-implementations",
                    "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(xml:)",
                        "title" : "init(xml: XMLElement)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/expressiblebyxmlelement-implementations",
                    "title" : "ExpressibleByXMLElement Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-22mry",
                        "title" : "func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-6omqc",
                        "title" : "func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reverse()",
                        "title" : "func reverse()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffle()",
                        "title" : "func shuffle()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffle(using:)",
                        "title" : "func shuffle<T>(using: inout T)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/sort(by:)",
                        "title" : "func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/swapat(_:_:)",
                        "title" : "func swapAt(Self.Index, Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/withcontiguousmutablestorageifavailable(_:)",
                        "title" : "func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-233lj",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-56yom",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-6d6tl",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-6kkaj",
                        "title" : "subscript(Range<Self.Index>) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/subscript(_:)-8ficn",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/mutablecollection-implementations",
                    "title" : "MutableCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/randomaccesscollection-implementations",
                    "title" : "RandomAccessCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/+(_:_:)-3dh6y",
                        "title" : "static func + <Other>(Other, Self) -> Self",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/+(_:_:)-69lhz",
                        "title" : "static func + <Other>(Self, Other) -> Self",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/+(_:_:)-9by0h",
                        "title" : "static func + <Other>(Self, Other) -> Self",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/+=(_:_:)",
                        "title" : "static func += <Other>(inout Self, Other)",
                        "type" : "op"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(_:)",
                        "title" : "init<S>(S)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/init(repeating:count:)",
                        "title" : "init(repeating: Self.Element, count: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(_:)",
                        "title" : "func append(Self.Element)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/append(contentsof:)-4fnoj",
                        "title" : "func append<S>(contentsOf: S)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/applying(_:)",
                        "title" : "func applying(CollectionDifference<Self.Element>) -> Self?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/insert(_:at:)",
                        "title" : "func insert(Self.Element, at: Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/insert(contentsof:at:)",
                        "title" : "func insert<C>(contentsOf: C, at: Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/poplast()",
                        "title" : "func popLast() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/remove(at:)",
                        "title" : "func remove(at: Self.Index) -> Self.Element",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removeall(keepingcapacity:)",
                        "title" : "func removeAll(keepingCapacity: Bool)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removeall(where:)-75du6",
                        "title" : "func removeAll(where: (Self.Element) throws -> Bool) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removeall(where:)-9e4tj",
                        "title" : "func removeAll(where: (Self.Element) throws -> Bool) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removefirst()",
                        "title" : "func removeFirst() -> Self.Element",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removefirst(_:)",
                        "title" : "func removeFirst(Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removelast()",
                        "title" : "func removeLast() -> Self.Element",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removelast(_:)",
                        "title" : "func removeLast(Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removesubrange(_:)-4b3dl",
                        "title" : "func removeSubrange(Range<Self.Index>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/removesubrange(_:)-5goqi",
                        "title" : "func removeSubrange<R>(R)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replace(_:with:maxreplacements:)",
                        "title" : "func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replacesubrange(_:with:)-1o7d7",
                        "title" : "func replaceSubrange<C>(Range<XMLElement.Content.Index>, with: C)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replacesubrange(_:with:)-3qvup",
                        "title" : "func replaceSubrange<C, R>(R, with: C)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replacesubrange(_:with:)-4dxdt",
                        "title" : "func replaceSubrange<C>(Range<Self.Index>, with: C)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replacing(_:with:maxreplacements:)",
                        "title" : "func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/replacing(_:with:subrange:maxreplacements:)",
                        "title" : "func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reservecapacity(_:)",
                        "title" : "func reserveCapacity(Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trimprefix(_:)",
                        "title" : "func trimPrefix<Prefix>(Prefix)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/trimprefix(while:)",
                        "title" : "func trimPrefix(while: (Self.Element) throws -> Bool) rethrows",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/rangereplaceablecollection-implementations",
                    "title" : "RangeReplaceableCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/underestimatedcount-2rusn",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/underestimatedcount-96dnk",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/all(_:)",
                        "title" : "func all((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/any(_:)",
                        "title" : "func any((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/flatmap(_:)-50w1t",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/flatmap(_:)-6lar",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/map(_:)-54h7v",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/none(_:)",
                        "title" : "func none((Self.Element) -> Bool) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct",
                "title" : "XMLElement.Content",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(_:)",
                    "title" : "init(XMLElement.Name.RawValue)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(rawvalue:)",
                    "title" : "init(rawValue: XMLElement.Name.RawValue)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(stringliteral:)",
                    "title" : "init(stringLiteral: XMLElement.Name.StringLiteralType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/rawvalue-swift.property",
                    "title" : "let rawValue: XMLElement.Name.RawValue",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/rawvalue-swift.typealias",
                    "title" : "XMLElement.Name.RawValue",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/stringliteraltype",
                    "title" : "XMLElement.Name.StringLiteralType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/expressiblebyunicodescalarliteral-implementations",
                    "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.struct",
                "title" : "XMLElement.Name",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:content:)-5rtdv",
                "title" : "init(name: XMLElement.Name, attributes: XMLElement.Attributes, content: XMLElement.Content.Element...)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:content:)-80f5p",
                "title" : "init(name: XMLElement.Name, attributes: XMLElement.Attributes, content: () -> XMLElement.Content)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:content:)-kgzp",
                "title" : "init(name: XMLElement.Name, attributes: XMLElement.Attributes, content: XMLElement.Content)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:elements:)-4kmbt",
                "title" : "init(name: XMLElement.Name, attributes: XMLElement.Attributes, elements: XMLElement...)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:elements:)-7lxxa",
                "title" : "init<Elements>(name: XMLElement.Name, attributes: XMLElement.Attributes, elements: Elements)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(name:attributes:stringcontent:)",
                "title" : "init(name: XMLElement.Name, attributes: XMLElement.Attributes, stringContent: XMLElement.Content.Element.StringPart)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attributes-swift.property",
                "title" : "var attributes: XMLElement.Attributes",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.property",
                "title" : "var content: XMLElement.Content",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/debugdescription",
                "title" : "var debugDescription: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/id-4rc6g",
                "title" : "var id: XMLElement.Name",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/name-swift.property",
                "title" : "let name: XMLElement.Name",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/append(contentsof:)",
                "title" : "func append<S>(contentsOf: S)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/append(element:)",
                "title" : "func append(element: XMLElement)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/append(elementof:)",
                "title" : "func append<Convertible>(elementOf: Convertible)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/append(elements:)",
                "title" : "func append(elements: XMLElement...)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/append(string:)",
                "title" : "func append(string: XMLElement.Content.Element.StringPart)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/appendelement(_:)",
                "title" : "func appendElement(XMLElement)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/appendelements(_:)",
                "title" : "func appendElements(XMLElement...)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/appendstring(_:)",
                "title" : "func appendString(XMLElement.Content.Element.StringPart)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/attribute(for:)",
                "title" : "func attribute(for: XMLElement.Attributes.Key) throws -> XMLElement.Attributes.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/converted(to:)",
                "title" : "func converted<Target>(to: Target.Type) throws -> Target",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-1x866",
                "title" : "func convertedAttribute<Target>(for: XMLElement.Attributes.Key) throws -> Target",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-29eim",
                "title" : "func convertedAttribute<T>(for: XMLElement.Attributes.Key) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-3butp",
                "title" : "func convertedAttribute<Target>(for: XMLElement.Attributes.Key) throws -> Target",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-3wjco",
                "title" : "func convertedAttribute<T>(for: XMLElement.Attributes.Key) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-7n67i",
                "title" : "func convertedAttribute<Target>(for: XMLElement.Attributes.Key) throws -> Target",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-7pgeq",
                "title" : "func convertedAttribute<T>(for: XMLElement.Attributes.Key) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:)-j6st",
                "title" : "func convertedAttribute<Target>(for: XMLElement.Attributes.Key) throws -> Target",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:converter:)-1pm40",
                "title" : "func convertedAttribute<T>(for: XMLElement.Attributes.Key, converter: (XMLElement.Attributes.Content) throws -> T?) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedattribute(for:converter:)-2tsl",
                "title" : "func convertedAttribute<T>(for: XMLElement.Attributes.Key, converter: (XMLElement.Attributes.Content) throws -> T) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedstringcontent()-44s62",
                "title" : "func convertedStringContent<T>() throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedstringcontent()-4i8zf",
                "title" : "func convertedStringContent<T>() throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedstringcontent()-6gudh",
                "title" : "func convertedStringContent<T>() throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedstringcontent(converter:)-1fj6u",
                "title" : "func convertedStringContent<T>(converter: (String) throws -> T?) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/convertedstringcontent(converter:)-5nxzr",
                "title" : "func convertedStringContent<T>(converter: (String) throws -> T) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/element(at:)-45kz",
                "title" : "func element<Path>(at: Path) throws -> XMLElement",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/element(at:)-7xp8e",
                "title" : "func element(at: XMLElement.Name...) throws -> XMLElement",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/elements(named:)",
                "title" : "func elements(named: XMLElement.Name) throws -> Array<XMLElement>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/remove(elementat:)-9v7qi",
                "title" : "func remove(elementAt: XMLElement.Name...) throws -> XMLElement?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/remove(elementat:)-9ydn7",
                "title" : "func remove<Path>(elementAt: Path) throws -> XMLElement?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/replace(elementat:with:)-1onn0",
                "title" : "func replace(elementAt: XMLElement.Name..., with: XMLElement) throws -> XMLElement",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/replace(elementat:with:)-4vaaw",
                "title" : "func replace<Path>(elementAt: Path, with: XMLElement) throws -> XMLElement",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/stringcontent()",
                "title" : "func stringContent() throws -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/withmutatingaccess(toelementat:do:)-47tub",
                "title" : "func withMutatingAccess<T>(toElementAt: XMLElement.Name..., do: (inout XMLElement) throws -> T) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/withmutatingaccess(toelementat:do:)-7my5i",
                "title" : "func withMutatingAccess<Path, T>(toElementAt: Path, do: (inout XMLElement) throws -> T) throws -> T",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/halfwidthcornerquoted",
                    "title" : "var halfWidthCornerQuoted: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/init(xml:)",
                    "title" : "init(xml: XMLElement)",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/expressiblebyxmlelement-implementations",
                "title" : "ExpressibleByXMLElement Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/id-8gfaw",
                    "title" : "var id: ObjectIdentifier",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/identifiable-implementations",
                "title" : "Identifiable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/xmlelement\/xml",
                    "title" : "var xml: XMLElement",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/xmlelement\/xmlelementconvertible-implementations",
                "title" : "XMLElementConvertible Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/xmlelement",
            "title" : "XMLElement",
            "type" : "struct"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/xmlwrangler\/xmlattributecontentrepresentable",
            "title" : "XMLAttributeContentRepresentable",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/xmlwrangler\/xmlelementrepresentable",
            "title" : "XMLElementRepresentable",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/xmlwrangler\/xwelement",
            "title" : "XWElement",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/ascii",
                "title" : "case ascii",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/utf16",
                "title" : "case utf16",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/utf8",
                "title" : "case utf8",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/documentencoding\/halfwidthcornerquoted",
                    "title" : "var halfWidthCornerQuoted: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/documentencoding\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/documentencoding\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/documentencoding",
            "title" : "DocumentEncoding",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/attribute(quotes:)",
                "title" : "case attribute(quotes: EscapableContent.Quotes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/cdata",
                "title" : "case cdata",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/comment",
                "title" : "case comment",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/processinginstruction",
                "title" : "case processingInstruction",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/text",
                "title" : "case text",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/single",
                    "title" : "case single",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/halfwidthcornerquoted",
                        "title" : "var halfWidthCornerQuoted: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/quotes",
                "title" : "EscapableContent.Quotes",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/halfwidthcornerquoted",
                    "title" : "var halfWidthCornerQuoted: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/escapablecontent\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/escapablecontent\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/escapablecontent",
            "title" : "EscapableContent",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/cannotconvertattribute(element:key:content:type:)",
                "title" : "case cannotConvertAttribute(element: XMLElement, key: XMLElement.Attributes.Key, content: XMLElement.Attributes.Content, type: Any.Type)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/cannotconvertstringcontent(element:stringcontent:type:)",
                "title" : "case cannotConvertStringContent(element: XMLElement, stringContent: XMLElement.Content.Element.StringPart, type: Any.Type)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/missingattribute(element:key:)",
                "title" : "case missingAttribute(element: XMLElement, key: XMLElement.Attributes.Key)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/missingchild(element:childname:)",
                "title" : "case missingChild(element: XMLElement, childName: XMLElement.Name)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/missingstringcontent(element:)",
                "title" : "case missingStringContent(element: XMLElement)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/lookuperror\/halfwidthcornerquoted",
                    "title" : "var halfWidthCornerQuoted: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/xmlwrangler\/lookuperror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/xmlwrangler\/lookuperror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/lookuperror",
            "title" : "LookupError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildarray(_:)",
                "title" : "static func buildArray(Array<XMLElement.Content>) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildblock()",
                "title" : "static func buildBlock() -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildblock(_:)-1udrp",
                "title" : "static func buildBlock(XMLElement.Content...) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildblock(_:)-3tzma",
                "title" : "static func buildBlock(XMLElement.Content) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildeither(first:)",
                "title" : "static func buildEither(first: XMLElement.Content) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildeither(second:)",
                "title" : "static func buildEither(second: XMLElement.Content) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildexpression(_:)-4endp",
                "title" : "static func buildExpression(String) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildexpression(_:)-4lv7q",
                "title" : "static func buildExpression(XMLElement) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildexpression(_:)-6pqxb",
                "title" : "static func buildExpression<T>(T) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildexpression(_:)-8e32w",
                "title" : "static func buildExpression(XMLElement.Content.Element) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildfinalresult(_:)",
                "title" : "static func buildFinalResult(XMLElement.Content) -> XMLElement.Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder\/buildoptional(_:)",
                "title" : "static func buildOptional(XMLElement.Content?) -> XMLElement.Content",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/xmlwrangler\/xmlcontentbuilder",
            "title" : "XMLContentBuilder",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/xmlwrangler",
        "title" : "XMLWrangler",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}