{
  "abstract" : [
    {
      "text" : "Returns an index that is the specified distance from the given index,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "unless that distance is beyond a given limiting index.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/index(_:offsetBy:limitedBy:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Swift",
    "externalID" : "s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:11XMLWrangler10XMLElementV7ContentV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "index"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sl5IndexQa",
        "text" : "Index"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "offsetBy"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "limitedBy"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sl5IndexQa",
        "text" : "Index"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sl5IndexQa",
        "text" : "Index"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "modules" : [
      {
        "name" : "XMLWrangler",
        "relatedModules" : [
          "Swift"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "index(_:offsetBy:limitedBy:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "index"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "i"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl5IndexQa",
              "text" : "Index"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "offsetBy"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "distance"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "limitedBy"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "limit"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl5IndexQa",
              "text" : "Index"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl5IndexQa",
              "text" : "Index"
            },
            {
              "kind" : "text",
              "text" : "?"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A valid index of the array.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "i"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The distance to offset ",
                  "type" : "text"
                },
                {
                  "code" : "i",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "distance"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A valid index of the collection to use as a limit. If",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "distance > 0",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", ",
                  "type" : "text"
                },
                {
                  "code" : "limit",
                  "type" : "codeVoice"
                },
                {
                  "text" : " should be greater than ",
                  "type" : "text"
                },
                {
                  "code" : "i",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to have any",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "effect. Likewise, if ",
                  "type" : "text"
                },
                {
                  "code" : "distance < 0",
                  "type" : "codeVoice"
                },
                {
                  "text" : ", ",
                  "type" : "text"
                },
                {
                  "code" : "limit",
                  "type" : "codeVoice"
                },
                {
                  "text" : " should be less than ",
                  "type" : "text"
                },
                {
                  "code" : "i",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "to have any effect.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "limit"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "An index offset by ",
              "type" : "text"
            },
            {
              "code" : "distance",
              "type" : "codeVoice"
            },
            {
              "text" : " from the index ",
              "type" : "text"
            },
            {
              "code" : "i",
              "type" : "codeVoice"
            },
            {
              "text" : ", unless that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "index would be beyond ",
              "type" : "text"
            },
            {
              "code" : "limit",
              "type" : "codeVoice"
            },
            {
              "text" : " in the direction of movement. In that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "case, the method returns ",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The following example obtains an index advanced four positions from an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "array’s starting index and then prints the element at that position. The",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "operation doesn’t require going beyond the limiting ",
              "type" : "text"
            },
            {
              "code" : "numbers.endIndex",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value, so it succeeds.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let numbers = [10, 20, 30, 40, 50]",
            "let i = numbers.index(numbers.startIndex, offsetBy: 4)",
            "print(numbers[i])",
            "\/\/ Prints \"50\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The next example attempts to retrieve an index ten positions from",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "numbers.startIndex",
              "type" : "codeVoice"
            },
            {
              "text" : ", but fails, because that distance is beyond the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "index passed as ",
              "type" : "text"
            },
            {
              "code" : "limit",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let j = numbers.index(numbers.startIndex,",
            "                      offsetBy: 10,",
            "                      limitedBy: numbers.endIndex)",
            "print(j)",
            "\/\/ Prints \"nil\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The value passed as ",
              "type" : "text"
            },
            {
              "code" : "distance",
              "type" : "codeVoice"
            },
            {
              "text" : " must not offset ",
              "type" : "text"
            },
            {
              "code" : "i",
              "type" : "codeVoice"
            },
            {
              "text" : " beyond the bounds of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the collection, unless the index passed as ",
              "type" : "text"
            },
            {
              "code" : "limit",
              "type" : "codeVoice"
            },
            {
              "text" : " prevents offsetting",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "beyond those bounds.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "O(1)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(_:offsetby:limitedby:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://XMLWrangler/documentation/XMLWrangler": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "XMLWrangler",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement": {
  "abstract" : [
    {
      "text" : "Represents an element in an XML structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct": {
  "abstract" : [
    {
      "text" : "A collection implementation that represents the contents of an XML element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement.Content",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/index(_:offsetBy:limitedBy:)": {
  "abstract" : [
    {
      "text" : "Returns an index that is the specified distance from the given index,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "unless that distance is beyond a given limiting index.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "index"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "offsetBy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "limitedBy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/index(_:offsetBy:limitedBy:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "index(_:offsetBy:limitedBy:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/index(_:offsetby:limitedby:)"
}
}
}