{
  "abstract" : [
    {
      "text" : "Reorders the elements of the collection such that all the elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that match the given predicate are after all the elements that don’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "match.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
        "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-6omqc"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Self",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "BidirectionalCollection",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "Swift",
    "externalID" : "s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:11XMLWrangler10XMLElementV7ContentV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "partition"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "by"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:ST7ElementQa",
        "text" : "Element"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "rethrows"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sl5IndexQa",
        "text" : "Index"
      }
    ],
    "modules" : [
      {
        "name" : "XMLWrangler",
        "relatedModules" : [
          "Swift"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "partition(by:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "mutating"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "partition"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "by"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "belongsInSecondPartition"
            },
            {
              "kind" : "text",
              "text" : ": ("
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:ST7ElementQa",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "rethrows"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sl5IndexQa",
              "text" : "Index"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A predicate used to partition",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "the collection. All elements satisfying this predicate are ordered",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "after all elements not satisfying it.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "belongsInSecondPartition"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The index of the first element in the reordered collection",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that matches ",
              "type" : "text"
            },
            {
              "code" : "belongsInSecondPartition",
              "type" : "codeVoice"
            },
            {
              "text" : ". If no elements in the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "collection match ",
              "type" : "text"
            },
            {
              "code" : "belongsInSecondPartition",
              "type" : "codeVoice"
            },
            {
              "text" : ", the returned index is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "equal to the collection’s ",
              "type" : "text"
            },
            {
              "code" : "endIndex",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "After partitioning a collection, there is a pivot index ",
              "type" : "text"
            },
            {
              "code" : "p",
              "type" : "codeVoice"
            },
            {
              "text" : " where",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "no element before ",
              "type" : "text"
            },
            {
              "code" : "p",
              "type" : "codeVoice"
            },
            {
              "text" : " satisfies the ",
              "type" : "text"
            },
            {
              "code" : "belongsInSecondPartition",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "predicate and every element at or after ",
              "type" : "text"
            },
            {
              "code" : "p",
              "type" : "codeVoice"
            },
            {
              "text" : " satisfies",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "belongsInSecondPartition",
              "type" : "codeVoice"
            },
            {
              "text" : ". This operation isn’t guaranteed to be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "stable, so the relative ordering of elements within the partitions might",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "change.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In the following example, an array of numbers is partitioned by a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "predicate that matches elements greater than 30.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var numbers = [30, 40, 20, 30, 30, 60, 10]",
            "let p = numbers.partition(by: { $0 > 30 })",
            "\/\/ p == 5",
            "\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "numbers",
              "type" : "codeVoice"
            },
            {
              "text" : " array is now arranged in two partitions. The first",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "partition, ",
              "type" : "text"
            },
            {
              "code" : "numbers[..<p]",
              "type" : "codeVoice"
            },
            {
              "text" : ", is made up of the elements that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "are not greater than 30. The second partition, ",
              "type" : "text"
            },
            {
              "code" : "numbers[p...]",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is made up of the elements that ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "are",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " greater than 30.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let first = numbers[..<p]",
            "\/\/ first == [30, 10, 20, 30, 30]",
            "let second = numbers[p...]",
            "\/\/ second == [60, 40]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note that the order of elements in both partitions changed.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "That is, ",
              "type" : "text"
            },
            {
              "code" : "40",
              "type" : "codeVoice"
            },
            {
              "text" : " appears before ",
              "type" : "text"
            },
            {
              "code" : "60",
              "type" : "codeVoice"
            },
            {
              "text" : " in the original collection,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "but, after calling ",
              "type" : "text"
            },
            {
              "code" : "partition(by:)",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "60",
              "type" : "codeVoice"
            },
            {
              "text" : " appears before ",
              "type" : "text"
            },
            {
              "code" : "40",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "O(",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : "), where ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " is the length of the collection.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-6omqc"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://XMLWrangler/documentation/XMLWrangler": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "XMLWrangler",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement": {
  "abstract" : [
    {
      "text" : "Represents an element in an XML structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLElement"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct": {
  "abstract" : [
    {
      "text" : "A collection implementation that represents the contents of an XML element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Content"
    }
  ],
  "role" : "symbol",
  "title" : "XMLElement.Content",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct"
},
"doc://XMLWrangler/documentation/XMLWrangler/XMLElement/Content-swift.struct/partition(by:)-6omqc": {
  "abstract" : [
    {
      "text" : "Reorders the elements of the collection such that all the elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that match the given predicate are after all the elements that don’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "match.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "BidirectionalCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "partition"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sl5IndexQa",
      "text" : "Index"
    }
  ],
  "identifier" : "doc:\/\/XMLWrangler\/documentation\/XMLWrangler\/XMLElement\/Content-swift.struct\/partition(by:)-6omqc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "partition(by:)",
  "type" : "topic",
  "url" : "\/documentation\/xmlwrangler\/xmlelement\/content-swift.struct\/partition(by:)-6omqc"
}
}
}